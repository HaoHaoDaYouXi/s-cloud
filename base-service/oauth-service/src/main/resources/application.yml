server:
  port: 9892

spring:
  profiles:
    active: dev
  application:
    name: @pom.artifactId@
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    password:
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/test?characterEncoding=utf8&useSSL=false&serverTimezone=GMT%2B8
    username: root
    password: root
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    # wall用于防火墙
    filters: stat
    maxActive: 20
    initialSize: 5
    maxWait: 60000
    minIdle: 3

#druid console
druid:
   loginUsername: admin
   loginPassword: admin
   resetEnable: false
   initialSize: 5 #初始化连接大小
   minIdle: 5     #最小连接池数量
   maxActive: 20  #最大连接池数量
   maxWait: 60000 #获取连接时最大等待时间，单位毫秒
   timeBetweenEvictionRunsMillis: 60000 #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
   minEvictableIdleTimeMillis: 300000   #配置一个连接在池中最小生存的时间，单位是毫秒
   validationQuery: SELECT 1 from DUAL  #测试连接
   testWhileIdle: true                  #申请连接的时候检测，建议配置为true，不影响性能，并且保证安全性
   testOnBorrow: false                  #获取连接时执行检测，建议关闭，影响性能
   testOnReturn: false                  #归还连接时执行检测，建议关闭，影响性能
   poolPreparedStatements: false        #是否开启PSCache，PSCache对支持游标的数据库性能提升巨大，oracle建议开启，mysql下建议关闭
   maxPoolPreparedStatementPerConnectionSize: 20 #开启poolPreparedStatements后生效
   filters: stat,wall,log4j #配置扩展插件，常用的插件有=>stat:监控统计  log4j:日志  wall:防御sql注入
   connectionProperties: 'druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000' #通过connectProperties属性来打开mergeSql功能;慢SQL记录


eureka:
  client:
    service-url:
      defaultZone: http://localhost:9890/eureka/
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}

mybatis:
  type-aliases-package: com.java.springcloud.model
  mapper-locations: classpath:mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true  #开启驼峰命名,l_name -> lName
    jdbc-type-for-null: NULL
    lazy-loading-enabled: true
    aggressive-lazy-loading: true
    cache-enabled: true #开启二级缓存
    call-setters-on-nulls: true #map空列不显示问题


#自定义参数
cloud:
  enableSqlLogInterceptor: false
  aliyun:
    rocketMq:
      enable: false
      reliableMessageConsumer: false
      reliableMessageProducer: true
      instanceName:
      consumerGroup:
      producerGroup:
  auth:
    rest-pwd-url: http://localhost/resetPwd?resetPwdKey=
    active-user-url: http://localhost:9892/oauth/auth/activeUser/
    refresh-token-url: http://localhost:9892/oauth/oauth/token
  token:
    interceptor:
      enable: true
  oauth2:
    jwtSigningKey: cloud
    client:
      id: ${security.oauth2.resource.id}
      accessTokenUrl: ${security.oauth2.client.access-token-uri}
      clientId: ${security.oauth2.client.clientId}
      clientSecret: ${security.oauth2.client.clientSecret}
      clientAuthenticationScheme: header
  security:
    social:
      filterProcessesUrl: /auth/callback
      qq:
        app-id:
        app-secret:
        providerId: qq
      weixin:
        app-id:
        app-secret:
        providerId: weixin
    code:
      image:
        expireIn: 180
        url: /auth/register,/auth/submitResetPwdEmail,/auth/code/sms
      sms:
        expireIn: 600
        url:
        mobileMaxSendCount: 1
        ipMaxSendCount: 2
        totalMaxSendCount: 3
    oauth2:
      tokenStore: jwt
      clients[0]:
        clientId: oauth-service
        clientSecret: oauthClientSecret
        accessTokenValidateSeconds: 7200
        scope: "*"




